"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getProfileInfo = void 0;
const Defaults_1 = require("../Defaults");
const Error_1 = require("../Error");
const Socket_1 = require("../Socket");
/**
 * Get profile information of a target (people or group)
 */
const getProfileInfo = (props) => __awaiter(void 0, void 0, void 0, function* () {
    const session = (0, Socket_1.getSession)(props.sessionId);
    if (!session)
        throw new Error_1.WhatsappError(Defaults_1.Messages.sessionNotFound(props.sessionId));
    const [profilePictureUrl, status] = yield Promise.allSettled([
        session.profilePictureUrl(props.target, "image", 5000),
        session.fetchStatus(props.target),
    ]);
    return {
        profilePictureUrl: profilePictureUrl.status === "fulfilled"
            ? profilePictureUrl.value || null
            : null,
        status: status.status === "fulfilled" ? status.value || null : null,
    };
});
exports.getProfileInfo = getProfileInfo;
